/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Arbitrager, ArbitragerInterface } from "../Arbitrager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d33380380610d338339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c610cab6100886000398061021752806103045280610720528061080d525050610cab6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806310d1e85c14610030575b600080fd5b6100bc6004803603608081101561004657600080fd5b6001600160a01b03823516916020810135916040820135919081019060808101606082013564010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b5090925090506100be565b005b6100e76040518060400160405280600781526020016639b2b73232b91d60c91b81525086610aeb565b60408051600280825260608083018452926020830190803683370190505090506000808484604081101561011a57600080fd5b5080359250602001359050866106335760008690506000336001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561016a57600080fd5b505afa15801561017e573d6000803e3d6000fd5b505050506040513d602081101561019457600080fd5b50516040805163d21220a760e01b81529051919250600091339163d21220a7916004808301926020929190829003018186803b1580156101d357600080fd5b505afa1580156101e7573d6000803e3d6000fd5b505050506040513d60208110156101fd57600080fd5b50516040805163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820187905291519293508392859284169163095ea7b39160448083019260209291908290030181600087803b15801561027757600080fd5b505af115801561028b573d6000803e3d6000fd5b505050506040513d60208110156102a157600080fd5b50508751839089906000906102b257fe5b60200260200101906001600160a01b031690816001600160a01b03168152505083886001815181106102e057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398760008c308c6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156103b0578181015183820152602001610398565b505050509050019650505050505050600060405180830381600087803b1580156103d957600080fd5b505af11580156103ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561041657600080fd5b810190808051604051939291908464010000000082111561043657600080fd5b90830190602082018581111561044b57600080fd5b825186602082028301116401000000008211171561046857600080fd5b82525081516020918201928201910280838360005b8381101561049557818101518382015260200161047d565b505050509050016040525050506001815181106104ae57fe5b602002602001015190506104e56040518060400160405280600b81526020016a36b9b39739b2b73232b91d60a91b81525033610aeb565b61050e6040518060400160405280600781526020016639b2b73232b91d60c91b81525089610ba6565b6040805163a9059cbb60e01b8152336004820152602481018a905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d602081101561058757600080fd5b810190808051906020019092919050505050816001600160a01b031663a9059cbb8f8a84036040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156105fb57600080fd5b505af115801561060f573d6000803e3d6000fd5b505050506040513d602081101561062557600080fd5b50610ae19650505050505050565b60008790506000336001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561067357600080fd5b505afa158015610687573d6000803e3d6000fd5b505050506040513d602081101561069d57600080fd5b50516040805163d21220a760e01b81529051919250600091339163d21220a7916004808301926020929190829003018186803b1580156106dc57600080fd5b505afa1580156106f0573d6000803e3d6000fd5b505050506040513d602081101561070657600080fd5b50516040805163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820187905291519293508492849284169163095ea7b39160448083019260209291908290030181600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d60208110156107aa57600080fd5b50508751849089906000906107bb57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082886001815181106107e957fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398760008c308c6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156108b95781810151838201526020016108a1565b505050509050019650505050505050600060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561091f57600080fd5b810190808051604051939291908464010000000082111561093f57600080fd5b90830190602082018581111561095457600080fd5b825186602082028301116401000000008211171561097157600080fd5b82525081516020918201928201910280838360005b8381101561099e578181015183820152602001610986565b505050509050016040525050506001815181106109b757fe5b6020908102919091018101516040805163a9059cbb60e01b8152336004820152602481018c905290519193506001600160a01b0385169263a9059cbb926044808401938290030181600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d6020811015610a3a57600080fd5b810190808051906020019092919050505050816001600160a01b031663a9059cbb8f8a84036040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610aae57600080fd5b505af1158015610ac2573d6000803e3d6000fd5b505050506040513d6020811015610ad857600080fd5b50505050505050505b5050505050505050565b604080516001600160a01b038316604482015260248101918252835160648201528351610ba29285928592829160840190602086019080838360005b83811015610b3f578181015183820152602001610b27565b50505050905090810190601f168015610b6c5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790529350610c5492505050565b5050565b610ba282826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610bf1578181015183820152602001610bd9565b50505050905090810190601f168015610c1e5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790529350610c5492505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fea2646970667358221220c10c57381185c24508e8a82d263f6e401676f95a8f0a71112dc5621213381d5b64736f6c63430006060033";

type ArbitragerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitragerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbitrager__factory extends ContractFactory {
  constructor(...args: ArbitragerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _sFactory: string,
    _uRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Arbitrager> {
    return super.deploy(
      _sFactory,
      _uRouter,
      overrides || {}
    ) as Promise<Arbitrager>;
  }
  getDeployTransaction(
    _sFactory: string,
    _uRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sFactory, _uRouter, overrides || {});
  }
  attach(address: string): Arbitrager {
    return super.attach(address) as Arbitrager;
  }
  connect(signer: Signer): Arbitrager__factory {
    return super.connect(signer) as Arbitrager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitragerInterface {
    return new utils.Interface(_abi) as ArbitragerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrager {
    return new Contract(address, _abi, signerOrProvider) as Arbitrager;
  }
}
